{
  // Editor settings
  "editor.tabSize": 2,
  "editor.insertSpaces": true,
  "editor.formatOnSave": true,
  "editor.formatOnPaste": true,
  "editor.formatOnType": true,
  "editor.detectIndentation": false,
  // C# specific settings
  "[csharp]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true,
    "editor.defaultFormatter": "ms-dotnettools.csharp"
  },
  // JSON specific settings
  "[json]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true
  },
  // XML specific settings (for .csproj files)
  "[xml]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true
  },
  // Markdown specific settings
  "[markdown]": {
    "editor.tabSize": 2,
    "editor.insertSpaces": true,
    "editor.formatOnSave": true
  },
  // .NET and C# extensions settings
  "dotnet.completion.showCompletionItemsFromUnimportedNamespaces": true,
  "dotnet.inlayHints.enableInlayHintsForParameters": true,
  "dotnet.inlayHints.enableInlayHintsForLiteralParameters": true,
  "dotnet.inlayHints.enableInlayHintsForIndexerParameters": true,
  "dotnet.inlayHints.enableInlayHintsForObjectCreationParameters": true,
  "dotnet.inlayHints.enableInlayHintsForOtherParameters": true,
  "dotnet.inlayHints.suppressInlayHintsForParametersThatDifferOnlyBySuffix": true,
  "dotnet.inlayHints.suppressInlayHintsForParametersThatMatchMethodIntent": true,
  "dotnet.inlayHints.suppressInlayHintsForParametersThatMatchArgumentName": true,
  // File associations
  "files.associations": {
    "*.csproj": "xml"
  },
  // Search exclude patterns
  "search.exclude": {
    "**/bin": true,
    "**/obj": true,
    "**/.vs": true,
    "**/node_modules": true
  },
  "task.autoDetect": "on",
  "task.slowProviderWarning": false,
  "task.quickOpen.showAll": true,
  "task.problemMatchers.neverPrompt": true,
  "task.quickOpen.history": 10,
  "task.saveBeforeRun": "always",
  "workbench.statusBar.visible": true,
  // Status bar task buttons
  "statusbar_command.commands": [
    {
      "text": "$(tools) Build",
      "command": "workbench.action.tasks.runTask",
      "arguments": [
        "build"
      ],
      "tooltip": "Build the project",
      "alignment": "left",
      "priority": 100
    },
    {
      "text": "$(play) Run Dev",
      "command": "workbench.action.tasks.runTask",
      "arguments": [
        "run-development"
      ],
      "tooltip": "Run in Development mode",
      "alignment": "left",
      "priority": 99
    },
    {
      "text": "$(eye) Watch",
      "command": "workbench.action.tasks.runTask",
      "arguments": [
        "watch"
      ],
      "tooltip": "Run with file watching",
      "alignment": "left",
      "priority": 98
    },
    {
      "text": "$(package) Publish",
      "command": "workbench.action.tasks.runTask",
      "arguments": [
        "publish"
      ],
      "tooltip": "Publish the project",
      "alignment": "left",
      "priority": 97
    },
    {
      "text": "$(trash) Clean",
      "command": "workbench.action.tasks.runTask",
      "arguments": [
        "clean"
      ],
      "tooltip": "Clean build outputs",
      "alignment": "left",
      "priority": 96
    }
  ],
  // Terminal settings
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      "source": "PowerShell",
      "icon": "terminal-powershell"
    },
    "Command Prompt": {
      "path": [
        "${env:windir}\\Sysnative\\cmd.exe",
        "${env:windir}\\System32\\cmd.exe"
      ],
      "args": [],
      "icon": "terminal-cmd"
    },
    "Git Bash": {
      "source": "Git Bash"
    }
  }
}